# this is example of the file that can be used for storing private and user specific environment variables, like keys or system paths
# create a file named .env (by default .env will be excluded from version control)
# the variables declared in .env are loaded in run.py automatically
# hydra allows you to reference variables in .yaml configs with special syntax: ${oc.env:MY_VAR}
source /root/.bashrc
cd $HOME
rm -rf $CODE_DIR
git clone https://github.com/AntreasAntoniou/TALI-lightning-hydra.git $CODE_DIR
cd $CODE_DIR
git pull

pip install -r $CODE_DIR/requirements.txt --upgrade
pip install -e $CODE_DIR

export MY_WANDB_API_KEY=42f577dbd00642a0a9da3e940bc0f16ab3fc7506
source setup_scripts/setup_wandb.sh
source setup_scripts/setup_disks.sh

eval "$(python run.py -sc install=bash)"
#python run.py hydra.verbose=False trainer=default resume=True batch_size=32 trainer.gpus=0 trainer.auto_scale_batch_size=False model=centi_modus_prime_resnet50 datamodule=upload_tali datamodule.config.modality_config.image=True datamodule.config.modality_config.text=True datamodule.config.modality_config.audio=True datamodule.config.modality_config.video=True debug_data=False datamodule.num_workers=32 datamodule.prefetch_factor=1 upload_data_to_wandb=True logger=wandb_dataset_upload datamodule.config.rescan_paths=False


#python run.py hydra.verbose=False \
#resume=False \
#batch_size=8 \
#trainer.gpus=0 \
#debug_data=True \
#model=centi_modus_prime_resnet50 \
#datamodule=tali \
#datamodule.config.modality_config.image=False \
#datamodule.config.modality_config.text=True \
#datamodule.config.modality_config.audio=False \
#datamodule.config.modality_config.video=False \
#datamodule.num_workers=128 \
#datamodule.config.num_video_frames_per_datapoint=10 \
#datamodule.prefetch_factor=2 \
#datamodule.config.rescan_paths=False \
#datamodule.config.num_audio_frames_per_datapoint=44100
#
#gcloud alpha compute tpus tpu-vm create tpu-vm=0 \
#--project tali-multi-modal \
#--zone=us-central1-f \
#--accelerator-type=v2-8 \
#--version=v2-alpha \
#--data-disk source=projects/tali-multi-modal/zones/us-central1-f/disks/disk-2,mode=read-write \
#--preemtpible
#
#gcloud beta compute instances create instance-1 --project=tali-multi-modal \
#--zone=us-central1-a --machine-type=n2-standard-128 \
#--network-interface=network-tier=PREMIUM,subnet=default \
#--no-restart-on-failure \
#--maintenance-policy=TERMINATE \
#--preemptible \
#--service-account=tali-multi-modal@tali-multi-modal.iam.gserviceaccount.com \
#--scopes=https://www.googleapis.com/auth/cloud-platform \
#--create-disk=auto-delete=yes,boot=yes,device-name=instance-1,image=projects/tali-multi-modal/global/images/tali-ubuntu-cuda110-pytorch-v-1-3,mode=rw,size=150,type=projects/tali-multi-modal/zones/us-central1-a/diskTypes/pd-standard \
#--create-disk=auto-delete=yes,device-name=tali-preprocessing-disk,image=projects/tali-multi-modal/global/images/tali-dataset-v-3-4,mode=rw,name=tali-preprocessing-disk,size=15000,type=projects/tali-multi-modal/zones/us-central1-a/diskTypes/pd-ssd \
#--no-shielded-secure-boot \
#--shielded-vtpm \
#--shielded-integrity-monitoring \
#--reservation-affinity=any \
#--provisioning-model=SPOT
#
# gcloud beta compute instances create gpu-instance-1 --project=tali-multi-modal --zone=us-central1-f --machine-type=a2-highgpu-2g --network-interface=network-tier=PREMIUM,subnet=default --no-restart-on-failure --maintenance-policy=TERMINATE --preemptible --service-account=tali-multi-modal@tali-multi-modal.iam.gserviceaccount.com --scopes=https://www.googleapis.com/auth/cloud-platform --accelerator=count=2,type=nvidia-tesla-a100 --create-disk=auto-delete=yes,boot=yes,device-name=gpu-instance-1,image=projects/tali-multi-modal/global/images/tali-ubuntu-cuda110-pytorch-v-1-3,mode=rw,size=150,type=projects/tali-multi-modal/zones/us-central1-f/diskTypes/pd-standard --create-disk=auto-delete=yes,device-name=disk-6,image=projects/tali-multi-modal/global/images/tali-v-3-5-high-npy-error-rate,mode=rw,name=disk-6,size=10000,type=projects/tali-multi-modal/zones/us-central1-f/diskTypes/pd-ssd --no-shielded-secure-boot --shielded-vtpm --shielded-integrity-monitoring --reservation-affinity=any --provisioning-model=SPOT
#
#python run.py hydra.verbose=False \
#resume=False \
#batch_size=24 \
#datamodule.num_workers=24 \
#trainer.gpus=2 \
#model=centi_modus_prime_resnet50 \
#datamodule=tali \
#datamodule.config.modality_config.image=True \
#datamodule.config.modality_config.text=True \
#datamodule.config.modality_config.audio=False \
#datamodule.config.modality_config.video=True \
#datamodule.config.rescan_paths=False \
#datamodule.config.num_video_frames_per_datapoint=10 \
#datamodule.config.num_audio_frames_per_datapoint=44100 \
#datamodule.prefetch_factor=2
